<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

// Below are system constants
const int CAPACITY = 10; // Total number of items available in the system

// Below are monitor constants
const int USERS = 5; // Number of users in the system --&gt; must match the number of instantiated users precisely
const int CREDIT = 2; // Number of credibility levels // At level 0 --&gt; no credibility, no service
const int TIMESCALE = 24; // A day of x hours is observed, the number does not really play a role
const int CANCEL_LATEST = 23; // Latest point in time to return an item
const int CRITICAL_PERIOD = 3; // A potential attack happens x timeunits before the clock gets reset
const int CRITICAL_NO_USERS = 2; // If number &gt; 1, only a DDoS is considered an attack

// Below are all declarations concerning the User-System relationship
// The system merely consists of a "database" which holds a certain number of items
chan checkDB;
chan updateDB;

int items = CAPACITY;

bool itemsAvailable() {
    return (items &gt; 0);
}

void removeItem() {
    if (items &gt; 0){
        items--;
    }
}

void returnItem() {
    if (items &lt; CAPACITY){
        items++;
    }
}

// Below are all declarations concerning the User-Monitor relationship
// The system is instantiated at the first move of the first user 
// It holds a list of credit scores named userList, which are enumerated as the users' IDs - 1
// The list can be updated, if a number of users specified by "const int CRITICAL_NO_USERS" make a cancellation at a specified time
// This is kept track by means of a temporary list, userListTemp
chan initMonitor;
chan initTempMonitor;
chan checkUser;
chan decreaseUser;
chan restoreUser;
chan decreaseUserTemp;

clock globalTime;

int[0,CREDIT] userList[USERS]; // Holds user credit scores
bool userListTemp[USERS]; // Holds temporary rule violations

bool isInitialised = false;
bool isDDoS = false;
bool systemReady = true; 
int[0,USERS] terminatedUsers = 0;
int[0,USERS] activeUsers = USERS;

// Only at very first iteration, all users start at max. trust level
void initialise(){
    if (isInitialised == false) {
        int i;
        for (i = 0; i &lt; USERS; i++){
            userList[i] = CREDIT;
        }
        isInitialised = true;
    }
}

// Gets initialised the first round
void initialiseTemp(){
    int i;
    for (i = 0; i &lt; USERS; i++) {
        userListTemp[i] = false;
    }
}

// Used to reset when a user comes back to the starting state
void resetTemp(int userID) {
    userListTemp[userID - 1] = false;
    systemReady = false;
    activeUsers--;
    if(activeUsers == 0){
        isDDoS = false;
        activeUsers = USERS;
        terminatedUsers = 0;
        systemReady = true;
    }
}

// Updates the list of potential attackers
void decreaseTemp(int userID) {
    userListTemp[userID - 1] = true;
}

// Checks whether a specified number of users violates a business rule 
void checkTemp(){ 
    int i;
    int counter = 0;
    for (i = 0; i &lt; USERS; i++) {
        if (userListTemp[i] == true) {
            counter++;
        }
    }
    if (counter &gt;= CRITICAL_NO_USERS) {
        isDDoS = true;
    }
}

// Checks whether a user can receive a service
bool checkUserScore(int userID) {
    bool isTrusted = true;
    if (userList[userID - 1] == 0) {
        isTrusted = false;
    }
    return isTrusted;
}

// Decreases the score of a user iff (s)he was part of a DDoS attack
void decreaseUserScore(int userID) {
    checkTemp();
    if ((userList[userID - 1] &gt; 0) &amp;&amp; (userListTemp[userID - 1] == true) &amp;&amp; (isDDoS == true)) {
        userList[userID - 1]--;
    }
} 

// Restores a user score to the highest trust level 
void restoreUserScore(int userID) {
    userList[userID - 1] = CREDIT;
}
</declaration>
	<template>
		<name x="5" y="5">User</name>
		<parameter>const int userID, const int cancelsLatestAt</parameter>
		<declaration>// Place local declarations here.
clock localTime;

bool cancelsReservation(int userID) { // evaluates to true for all userIDs dividable by 3
    bool cancels = false;
    if ((userID % 3) == 0) {
        cancels = true;
    }
    return cancels;
}

bool isTrusted(bool trusted) {
    return trusted;
}</declaration>
		<location id="id0" x="-450" y="-93">
			<name x="-501" y="-102">Start</name>
			<urgent/>
		</location>
		<location id="id1" x="-442" y="-450">
			<name x="-493" y="-476">Select</name>
			<urgent/>
		</location>
		<location id="id2" x="34" y="-450">
			<name x="24" y="-484">Register</name>
			<urgent/>
		</location>
		<location id="id3" x="-187" y="-348">
			<name x="-246" y="-382">Service</name>
			<label kind="invariant" x="-408" y="-365">localTime &lt;= CANCEL_LATEST</label>
		</location>
		<location id="id4" x="246" y="-348">
			<name x="236" y="-382">NoService</name>
			<urgent/>
		</location>
		<location id="id5" x="-187" y="-195">
			<name x="-221" y="-229">Pay</name>
			<label kind="invariant" x="-374" y="-212">localTime &lt;= TIMESCALE</label>
		</location>
		<location id="id6" x="246" y="-195">
			<name x="255" y="-229">Cancel</name>
			<urgent/>
		</location>
		<location id="id7" x="246" y="-34">
			<name x="212" y="-17">CheckUser</name>
			<committed/>
		</location>
		<location id="id8" x="-187" y="-34">
			<name x="-178" y="-25">Wait</name>
		</location>
		<location id="id9" x="-612" y="-280">
			<name x="-622" y="-314">Init</name>
			<committed/>
		</location>
		<location id="id10" x="-399" y="-34">
			<name x="-425" y="-25">Reset</name>
			<committed/>
		</location>
		<location id="id11" x="-187" y="-110">
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<nail x="-365" y="-93"/>
			<nail x="-408" y="-153"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id8"/>
			<label kind="guard" x="-424" y="-527">not itemsAvailable()</label>
			<label kind="assignment" x="-425" y="-510">terminatedUsers++</label>
			<nail x="-442" y="-493"/>
			<nail x="314" y="-493"/>
			<nail x="314" y="25"/>
			<nail x="-187" y="25"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-280" y="-93">restoreUser!</label>
			<label kind="assignment" x="-365" y="-76">restoreUserScore(userID)</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id11"/>
			<label kind="guard" x="-365" y="-178">localTime == TIMESCALE</label>
			<label kind="synchronisation" x="-272" y="-161">updateDB!</label>
			<label kind="assignment" x="-331" y="-144">terminatedUsers++</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-569" y="-76">initTempMonitor!</label>
			<label kind="assignment" x="-569" y="-59">resetTemp(userID)</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id10"/>
			<label kind="guard" x="-382" y="9">(terminatedUsers % USERS) == 0</label>
			<label kind="synchronisation" x="-382" y="-25">decreaseUser!</label>
			<label kind="assignment" x="-382" y="-8">decreaseUserScore(userID)</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="17" y="-68">decreaseUserTemp!</label>
			<label kind="assignment" x="17" y="-51">decreaseTemp(userID)</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id8"/>
			<label kind="guard" x="-136" y="-153">localTime &lt; TIMESCALE - CRITICAL_PERIOD</label>
			<label kind="synchronisation" x="-136" y="-136">updateDB!</label>
			<label kind="assignment" x="-136" y="-119">terminatedUsers++</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="110" y="-136">localTime &gt;= TIMESCALE - CRITICAL_PERIOD</label>
			<label kind="synchronisation" x="110" y="-119">updateDB!</label>
			<label kind="assignment" x="110" y="-102">terminatedUsers++</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="guard" x="110" y="-297">cancelsReservation(userID)</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="-102" y="-229">not cancelsReservation(userID)</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id5"/>
			<label kind="guard" x="-425" y="-323">not cancelsReservation(userID) 
or (localTime &gt;= CANCEL_LATEST)</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id6"/>
			<label kind="guard" x="-119" y="-357">cancelsReservation(userID)
and (localTime &lt;= cancelsLatestAt)</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-195" y="-433">checkUserScore(userID)</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="102" y="-433">not checkUserScore(userID)</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-399" y="-433">itemsAvailable()</label>
			<label kind="synchronisation" x="-399" y="-450">checkUser!</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-594" y="-382">checkDB!</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id9"/>
			<label kind="guard" x="-663" y="-238">not isInitialised 
and systemReady</label>
			<label kind="synchronisation" x="-663" y="-204">initMonitor!</label>
			<label kind="assignment" x="-663" y="-187">localTime = 0</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-442" y="-238">isInitialised and
systemReady</label>
			<label kind="synchronisation" x="-442" y="-204">checkDB!</label>
			<label kind="assignment" x="-442" y="-187">localTime = 0</label>
		</transition>
	</template>
	<template>
		<name>MalUser</name>
		<parameter>const int userID, const int cancelsEarliestAt</parameter>
		<declaration>// Place local declarations here.
clock localTime;

bool cancelsReservation(int userID) { //always evaluates to true
    bool cancels = false;
    if ((userID % 1) == 0) { 
        cancels = true;
    }
    return cancels;
}

bool isTrusted(bool trusted) {
    return trusted;
}</declaration>
		<location id="id12" x="-450" y="-93">
			<name x="-501" y="-102">Start</name>
			<urgent/>
		</location>
		<location id="id13" x="-442" y="-450">
			<name x="-493" y="-476">Select</name>
			<urgent/>
		</location>
		<location id="id14" x="34" y="-450">
			<name x="24" y="-484">Register</name>
			<urgent/>
		</location>
		<location id="id15" x="-187" y="-348">
			<name x="-246" y="-382">Service</name>
			<label kind="invariant" x="-408" y="-365">localTime &lt;= CANCEL_LATEST</label>
		</location>
		<location id="id16" x="246" y="-348">
			<name x="236" y="-382">NoService</name>
			<urgent/>
		</location>
		<location id="id17" x="-187" y="-195">
			<name x="-221" y="-229">Pay</name>
			<label kind="invariant" x="-374" y="-212">localTime &lt;= TIMESCALE</label>
		</location>
		<location id="id18" x="246" y="-195">
			<name x="255" y="-229">Cancel</name>
			<urgent/>
		</location>
		<location id="id19" x="246" y="-34">
			<name x="212" y="-17">CheckUser</name>
			<committed/>
		</location>
		<location id="id20" x="-187" y="-34">
			<name x="-178" y="-25">Wait</name>
		</location>
		<location id="id21" x="-612" y="-280">
			<name x="-622" y="-314">Init</name>
			<committed/>
		</location>
		<location id="id22" x="-399" y="-34">
			<name x="-425" y="-25">Reset</name>
			<committed/>
		</location>
		<location id="id23" x="-187" y="-110">
			<committed/>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id12"/>
			<target ref="id12"/>
			<nail x="-365" y="-93"/>
			<nail x="-408" y="-153"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id20"/>
			<label kind="guard" x="-424" y="-527">not itemsAvailable()</label>
			<label kind="assignment" x="-425" y="-510">terminatedUsers++</label>
			<nail x="-442" y="-493"/>
			<nail x="314" y="-493"/>
			<nail x="314" y="25"/>
			<nail x="-187" y="25"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-280" y="-93">restoreUser!</label>
			<label kind="assignment" x="-365" y="-76">restoreUserScore(userID)</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id23"/>
			<label kind="guard" x="-374" y="-178">localTime == TIMESCALE</label>
			<label kind="synchronisation" x="-272" y="-161">updateDB!</label>
			<label kind="assignment" x="-331" y="-144">terminatedUsers++</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-569" y="-76">initTempMonitor!</label>
			<label kind="assignment" x="-569" y="-59">resetTemp(userID)</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id22"/>
			<label kind="guard" x="-382" y="9">(terminatedUsers % USERS) == 0</label>
			<label kind="synchronisation" x="-382" y="-25">decreaseUser!</label>
			<label kind="assignment" x="-382" y="-8">decreaseUserScore(userID)</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="17" y="-68">decreaseUserTemp!</label>
			<label kind="assignment" x="17" y="-51">decreaseTemp(userID)</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id20"/>
			<label kind="guard" x="-136" y="-153">localTime &lt; TIMESCALE - CRITICAL_PERIOD</label>
			<label kind="synchronisation" x="-136" y="-136">updateDB!</label>
			<label kind="assignment" x="-136" y="-119">terminatedUsers++</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="guard" x="110" y="-136">localTime &gt;= TIMESCALE - CRITICAL_PERIOD</label>
			<label kind="synchronisation" x="110" y="-119">updateDB!</label>
			<label kind="assignment" x="110" y="-102">terminatedUsers++</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id18"/>
			<label kind="guard" x="110" y="-297">cancelsReservation(userID)</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="guard" x="-102" y="-229">not cancelsReservation(userID)</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id17"/>
			<label kind="guard" x="-425" y="-323">not cancelsReservation(userID) 
or (localTime &gt; CANCEL_LATEST)</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id18"/>
			<label kind="guard" x="-119" y="-374">cancelsReservation(userID)
and ((localTime &gt;= cancelsEarliestAt) 
and (localTime &lt;= CANCEL_LATEST))</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-195" y="-433">checkUserScore(userID)</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id16"/>
			<label kind="guard" x="102" y="-433">not checkUserScore(userID)</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="guard" x="-399" y="-433">itemsAvailable()</label>
			<label kind="synchronisation" x="-399" y="-450">checkUser!</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-594" y="-382">checkDB!</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id21"/>
			<label kind="guard" x="-663" y="-238">not isInitialised 
and systemReady</label>
			<label kind="synchronisation" x="-663" y="-204">initMonitor!</label>
			<label kind="assignment" x="-663" y="-187">localTime = 0</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="-442" y="-238">isInitialised and
systemReady</label>
			<label kind="synchronisation" x="-442" y="-204">checkDB!</label>
			<label kind="assignment" x="-442" y="-187">localTime = 0</label>
		</transition>
	</template>
	<template>
		<name>System</name>
		<declaration>// Place local declarations here.


</declaration>
		<location id="id24" x="-374" y="-51">
			<name x="-391" y="-85">DB_returnItem</name>
			<committed/>
		</location>
		<location id="id25" x="0" y="-51">
			<name x="-17" y="-85">DB_removeItem</name>
			<committed/>
		</location>
		<location id="id26" x="-195" y="-51">
			<name x="-212" y="-85">Start</name>
		</location>
		<init ref="id26"/>
		<transition>
			<source ref="id24"/>
			<target ref="id26"/>
			<label kind="assignment" x="-331" y="0">returnItem()</label>
			<nail x="-289" y="0"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-323" y="-51">updateDB?</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="assignment" x="-144" y="-110">removeItem()</label>
			<nail x="-102" y="-93"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-136" y="-51">checkDB?</label>
			<nail x="-85" y="-51"/>
		</transition>
	</template>
	<template>
		<name>Monitor</name>
		<declaration>// Place local declarations here.
    



</declaration>
		<location id="id27" x="-102" y="-212">
			<name x="-112" y="-246">DecreaseUser</name>
			<committed/>
		</location>
		<location id="id28" x="-255" y="-272">
			<name x="-265" y="-306">CheckUser</name>
			<committed/>
		</location>
		<location id="id29" x="-654" y="-85">
			<name x="-731" y="-119">InitMonitor</name>
			<committed/>
		</location>
		<location id="id30" x="-255" y="-85">
			<name x="-297" y="-119">Start</name>
		</location>
		<location id="id31" x="-255" y="102">
			<name x="-263" y="119">RestoreUser</name>
			<committed/>
		</location>
		<location id="id32" x="-102" y="42">
			<name x="-112" y="8">DecreaseUserTemp</name>
			<committed/>
		</location>
		<location id="id33" x="-654" y="8">
			<committed/>
		</location>
		<init ref="id30"/>
		<transition>
			<source ref="id33"/>
			<target ref="id30"/>
			<nail x="-467" y="-59"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="-476" y="-34">initTempMonitor?</label>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id30"/>
			<nail x="-195" y="0"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="-161" y="-34">decreaseUserTemp?</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id30"/>
			<nail x="-280" y="8"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="-246" y="34">restoreUser?</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id30"/>
			<nail x="-161" y="-127"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id30"/>
			<nail x="-229" y="-178"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-229" y="-204">decreaseUser?</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="-340" y="-229">checkUser?</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="assignment" x="-612" y="-127">initialise(), initialiseTemp(), globalTime = 0</label>
			<nail x="-476" y="-102"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-527" y="-85">initMonitor?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
// UserX = User(&lt;ID&gt;, &lt;cancels latest at&gt;)
// For n users, use IDs 1, ... ,n
// For &lt;cancels latest at&gt; parameter, choose value &lt; TIMESCALE
// If a user is deterministically cancelling, choose value &gt;= 22 for the user to be able to cancel "late enough"

User1 = User(1, 21);
User2 = User(2, 22);
User3 = User(3, 23);
User4 = User(6, 21); // For feature testing
User5 = User(7, 22); // For feature testing
User6 = User(8, 23); // For feature testing

MalUser1 = MalUser(4, 22); // To do: Test whether different times can be used, e.g. times that are below the critical threshold --&gt; yes, that is possible
MalUser2 = MalUser(5, 21);
MalUser3 = MalUser(9, 22); // For feature testing
MalUser4 = MalUser(10, 21); // For feature testing

System1 = System();
Monitor1 = Monitor();

// List one or more processes to be composed into a system.
system User1, User2, User3, MalUser1, MalUser2, System1, Monitor1;
//system User1, User2, User3, User4, User5, User6, MalUser1, MalUser2, MalUser3, MalUser4, System1, Monitor1;


    </system>
	<queries>
		<query>
			<formula>E[] not User1.NoService</formula>
			<comment>There is no possible state in which User1 receives no service --&gt; satisfied</comment>
		</query>
		<query>
			<formula>E&lt;&gt; MalUser1.Service</formula>
			<comment>A malicious user can receive a service (note that this is important for the following property) --&gt; satisfied</comment>
		</query>
		<query>
			<formula>MalUser1.NoService --&gt; not MalUser1.Service</formula>
			<comment>Once a malicious user gets its service revoked, s(he) can never return to receiving a service --&gt; satisfied</comment>
		</query>
		<query>
			<formula>E&lt;&gt; User3.NoService</formula>
			<comment>It is possible for a benign user to reach the no service state --&gt; satisfied</comment>
		</query>
		<query>
			<formula>E&lt;&gt; User1.Service and User2.Service and User3.NoService and MalUser1.NoService and MalUser2.NoService</formula>
			<comment>It is possible for all malicious users and a benign user to get into a no-service state --&gt; satisfied</comment>
		</query>
		<query>
			<formula>E&lt;&gt; User3.Pay</formula>
			<comment>Due to differing timing constraints, User3 may reach the Pay state --&gt; satisfied</comment>
		</query>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>There is no deadlock, i.e. the system is always up and running --&gt; satisfied</comment>
		</query>
	</queries>
</nta>
